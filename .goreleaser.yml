# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
project_name: terraform-provider-graphql
before:
  hooks:
    - go mod download
    - go generate ./...

builds:
  - env:
      # goreleaser does not work with CGO, it could also complicate
      # usage by users in CI/CD systems like Terraform Cloud where
      # they are unable to install libraries.
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
    goos:
      - freebsd
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - "386"
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: "386"
    binary: "terraform-provider-graphql"

archives:
  - format: zip
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    # Include the binary and any additional files
    files:
      - README.md
      - LICENSE
      - CHANGELOG.md

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
  algorithm: sha256

# Uncomment and configure the following section if you want to sign releases
# You'll need to set the GPG_FINGERPRINT environment variable in your CI
signs:
  - artifacts: checksum
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

release:
  # If you want to manually examine the release before its live, uncomment this line:
  # draft: true
  # GitHub release configuration
  github:
    owner: kalenarndt
    name: terraform-provider-graphql

snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^lint:"
      - "^chore:"
      - "^ci:"

# Docker configuration (optional)
# docker:
#   image_templates:
#     - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}"
#     - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest"
#   dockerfile: Dockerfile
#   use: buildx
